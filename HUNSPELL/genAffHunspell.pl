#!/usr/bin/perl -w

#Generates Hunspell affix rules from jspell affix rules for Portuguese (pt_PT)
#GenerateHunspellAffixFile: Jspell Aff -> Hunspell Aff

#Rui Vilela, 2007

use strict;
use locale;

my ($pri, $seg, @ter, @qua, @qui, $i, $tmp, $tmp2, $flg, @morf);

print "SET ISO8859-1\n";
print "LANG pt_PT\n";
#next line is generated by ordenaFreqPrimeiraLetra.pl (stream of letters sorted by the number of ocurrences, although only one run is required...)
print "TRY aerisontcdmlupvgbfz·hÁqjÌx„ÛÈÍ‚˙ıACMPSBTELGRIFVDkHJONÙywUKXZWQ¡YÕ…‡”Ë¬⁄\n\n";


while(<>){
    next if (/^wordchars/ || /^\s+$/ || /^\#/ || /^defstringtype/ || /^allaffixes/ || /boundarychars/);
    s/\s*\#noispell\s*//;
    s/\\-/-/g;
    if (/^prefixes$/){$pri='PFX';next;}
    if (/^suffixes$/){$pri='SFX';next;}
    if (/^flag ([\*\+])(\w)/) {    ##Flag data
	$tmp=$2;
	$tmp2=$1;
	
	if (defined($seg)){
	    printf ("\n%s %s %s %d\n",$pri,$seg,$flg=~/[\*\+]/ ? 'Y' : 'N',$#ter+1); ##number of items at the end
	    for ($i=0;$i<@qui;$i++){
		print "$pri $seg   ".lc($ter[$i])." " x (15-length($ter[$i])).lc($qua[$i])." " x (15-length($qua[$i])).lc($qui[$i])." " x (15-length($qui[$i])).$morf[$i]."\n";
	    }
	    @ter=();@qua=();@qui=(); @morf=(); #clean buffer from previous flag
	}
	$seg=$tmp;
	$flg=$tmp2;
	next;
    }
    s/\#.*//;   #Strip Comments
    /^(.+)\s*>\s+([\-\w]*)[,]?([\-\w]*)\s*\;\s*\"([^\"]+)\"/;   ##Takeoff data
    #print STDERR "$pri : $seg : $2 : $3 : $1 : $4\n";
    push @qui, $1;
    $tmp2=$2;
    $tmp=$3;
    push @morf, ($pri eq 'SFX' ? "+$4" : "$4+");
	
    if (length($tmp)<1) {
	push @ter, '0';
	push @qua, $tmp2; 
    }else{
	push @ter, $tmp2;
	push @qua, $tmp;
    }
    $ter[-1]=~s/-//;       ##Cleaning
    $qui[-1]=~s/\s//g;
    #$qua[-1]=~s/-/0/;
}

#Copypaste from upper lines #⁄ltima regra
printf ("\n%s %s %s %d\n",$pri,$seg,$flg=~/[\*\+]/ ? 'Y' : 'N',$#ter+1); ##number of items at the end
for ($i=0;$i<@qui;$i++){
    print "$pri $seg   ".lc($ter[$i])." " x (15-length($ter[$i])).lc($qua[$i])." " x (15-length($qua[$i])).lc($qui[$i])." " x (15-length($qui[$i])).$morf[$i]."\n";
}
